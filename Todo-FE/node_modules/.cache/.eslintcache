[{"C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\index.js":"1","C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\reportWebVitals.js":"2","C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\App.js":"3","C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\services.js":"4","C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\components\\alert.js":"5","C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\constants.js":"6","C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\config.js":"7"},{"size":500,"mtime":1640398258574,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1640398258726,"results":"10","hashOfConfig":"9"},{"size":3977,"mtime":1640417903841,"results":"11","hashOfConfig":"9"},{"size":1475,"mtime":1640408232536,"results":"12","hashOfConfig":"9"},{"size":241,"mtime":1640403788676,"results":"13","hashOfConfig":"9"},{"size":753,"mtime":1640425777418,"results":"14","hashOfConfig":"9"},{"size":135,"mtime":1640427860132,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"anuc41",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\index.js",[],"C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\reportWebVitals.js",[],"C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\App.js",["31","32","33","34"],"import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useEffect, useState, React, useRef } from \"react\";\nimport { getOneTodo, getTodos,addTodo, updateTodo, removeOneTodo, removeAllTodo } from \"./services.js\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Alert } from \"./components/alert\";\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [addStatus, setAddStautus] = useState(true);\n  const [currentTodo, setCurrentTodo] = useState({\"content\":\"\"});\n  const [sort,setSort]=useState('des');\n  const loadData = async (sort='des') => {\n    const callTodos = await getTodos(sort);\n    if (!callTodos) return;\n    setTodos(callTodos);\n  };\n  const handleContent = (event)=>{\n    const {value,name}= event.target;\n    setCurrentTodo(preState=>{return {...preState,[name]:value}})\n\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  const addNew= async()=>{\n    setCurrentTodo({\"content\":\"\"})\n    await addOrUpdate()\n  }\n  const addOrUpdate = async () => {\n    let todo;\n    let status= true;\n    if(currentTodo.id){ \n      todo = await updateTodo(currentTodo.id,currentTodo);\n      if(!todo) status= false;\n      if (todo){ \n        setCurrentTodo(todo);\n        loadData()\n      }\n    }\n    else {\n      todo = await addTodo(currentTodo);\n      if(!todo) status= false; \n      if (todo){ setCurrentTodo(todo);  loadData() };\n    }\n    \n    setOpen(true);\n    setAddStautus(status);\n  };\n  const onKeyPress = (e)=>{\n    if(e.key == 'Enter'){ addOrUpdate()} \n  }\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const handleDeleteOne=async(id)=>{\n    await removeOneTodo(id)\n    loadData()\n  }\n  const clear = () =>{ \n    setCurrentTodo({\"content\":\"\"})\n\n  }\n  const edit=(todo)=>{\n    setCurrentTodo(todo);\n  }\n  const deleteAll=()=>{\n    let status= true;\n    const deletes = removeAllTodo();\n    if(!deletes) status =false\n    setOpen(true);\n    setAddStautus(status);\n    loadData()\n\n  }\n  const sorting=()=>{\n      if(sort===\"asc\"){\n        setSort('des')\n      }\n      else setSort('asc')\n      loadData(sort)\n\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1> Work To-dos </h1>\n      </header>\n      <div className=\"container\">\n        <div className=\"input-group col-6 mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"New Item\"\n            aria-describedby=\"basic-addon1\"\n            name=\"content\"\n            value={currentTodo.content}\n            onKeyPress={onKeyPress}\n            onChange={handleContent}\n          />\n          <Button variant=\"outlined\" onClick={clear}>\n              &times;\n          </Button>\n          <Button variant=\"outlined\" onClick={sorting}>\n              Sorting\n          </Button>\n          <Button variant=\"outlined\" className=\"btn btn-danger\" onClick={deleteAll}>\n             Delete all\n          </Button>          \n        </div>\n        <Stack spacing={2} sx={{ width: \"100%\" }}>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n             {addStatus? <Alert\n                onClose={handleClose}\n                severity=\"success\"\n                sx={{ width: \"100%\" }}\n              >\n                Success\n              </Alert>:\n              <Alert\n              onClose={handleClose}\n              severity=\"error\"\n              sx={{ width: \"100%\" }}\n            >\n              Fail\n            </Alert>\n              }\n            </Snackbar>\n            {todos.map((todo,index) => {\n              return <Alert key={index} severity=\"info\" onClose={() => {handleDeleteOne(todo.id)}} icon={false} onClick={()=>{edit(todo)}} >{todo.content}</Alert>;\n            })}\n          </Stack>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\services.js",[],"C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\components\\alert.js",[],"C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\constants.js",["35"],"C:\\Users\\longn\\OneDrive\\Desktop\\todo-app\\Todo-FE\\src\\config.js",[],{"ruleId":"36","severity":1,"message":"37","line":3,"column":38,"nodeType":"38","messageId":"39","endLine":3,"endColumn":44},{"ruleId":"36","severity":1,"message":"40","line":4,"column":10,"nodeType":"38","messageId":"39","endLine":4,"endColumn":20},{"ruleId":"36","severity":1,"message":"41","line":28,"column":9,"nodeType":"38","messageId":"39","endLine":28,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":53,"column":14,"nodeType":"44","messageId":"45","endLine":53,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":5,"column":12,"nodeType":"44","messageId":"45","endLine":5,"endColumn":14},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'getOneTodo' is defined but never used.","'addNew' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]